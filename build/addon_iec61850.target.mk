# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := addon_iec61850
### Rules for action "print_variable":
quiet_cmd_binding_gyp_addon_iec61850_target_print_variable = ACTION binding_gyp_addon_iec61850_target_print_variable $@
cmd_binding_gyp_addon_iec61850_target_print_variable = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; echo "openssl_fips: $(openssl_fips)"

print_output: obj := $(abs_obj)
print_output: builddir := $(abs_builddir)
print_output: export BUILT_FRAMEWORKS_DIR := ${abs_builddir}
print_output: export BUILT_PRODUCTS_DIR := ${abs_builddir}
print_output: export CONFIGURATION := ${BUILDTYPE}
print_output: export DYLIB_INSTALL_NAME_BASE := @rpath
print_output: export EXECUTABLE_NAME := addon_iec61850.node
print_output: export EXECUTABLE_PATH := addon_iec61850.node
print_output: export FULL_PRODUCT_NAME := addon_iec61850.node
print_output: export LD_DYLIB_INSTALL_NAME := @rpath/addon_iec61850.node
print_output: export MACH_O_TYPE := mh_bundle
print_output: export PRODUCT_NAME := addon_iec61850
print_output: export PRODUCT_TYPE := com.apple.product-type.library.dynamic
print_output: export SDKROOT := /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk
print_output: export SRCROOT := ${abs_srcdir}/
print_output: export SOURCE_ROOT := ${SRCROOT}
print_output: export TARGET_BUILD_DIR := ${abs_builddir}
print_output: export TEMP_DIR := ${TMPDIR}
print_output: export XCODE_VERSION_ACTUAL := 1530
print_output: TOOLSET := $(TOOLSET)
print_output:  FORCE_DO_CMD
	$(call do_cmd,binding_gyp_addon_iec61850_target_print_variable)

all_deps += print_output
action_binding_gyp_addon_iec61850_target_print_variable_outputs := print_output


DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=addon_iec61850' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNAPI_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-fno-strict-aliasing \
	-mmacosx-version-min=11.0 \
	-arch \
	arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-Wall \
	-Wno-unused-parameter

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++20 \
	-stdlib=libc++ \
	-fno-rtti \
	-Wall \
	-Wno-unused-parameter \
	-std=c++17 \
	-fexceptions

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/include/node \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/src \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/openssl/config \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/openssl/openssl/include \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/uv/include \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/zlib \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/v8/include \
	-I/Users/andreypetrov/Downloads/libiec61850-node/node_modules/node-addon-api \
	-I$(srcdir)/include/libiec61850 \
	-I$(srcdir)/src

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=addon_iec61850' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-D_GLIBCXX_USE_CXX11_ABI=1' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DNAPI_CPP_EXCEPTIONS' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-O3 \
	-gdwarf-2 \
	-fno-strict-aliasing \
	-flto \
	-mmacosx-version-min=11.0 \
	-arch \
	arm64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-Wall \
	-Wno-unused-parameter

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++20 \
	-stdlib=libc++ \
	-fno-rtti \
	-Wall \
	-Wno-unused-parameter \
	-std=c++17 \
	-fexceptions

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/include/node \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/src \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/openssl/config \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/openssl/openssl/include \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/uv/include \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/zlib \
	-I/Users/andreypetrov/Library/Caches/node-gyp/23.9.0/deps/v8/include \
	-I/Users/andreypetrov/Downloads/libiec61850-node/node_modules/node-addon-api \
	-I$(srcdir)/include/libiec61850 \
	-I$(srcdir)/src

OBJS := \
	$(obj).target/$(TARGET)/src/addon.o \
	$(obj).target/$(TARGET)/src/mms_client.o \
	$(obj).target/$(TARGET)/src/goose_subscriber.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action_binding_gyp_addon_iec61850_target_print_variable_outputs)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(builddir)/addon_iec61850.node: | $(action_binding_gyp_addon_iec61850_target_print_variable_outputs)

# Preserve order dependency of special output on deps.
$(action_binding_gyp_addon_iec61850_target_print_variable_outputs): | 

LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=11.0 \
	-arch \
	arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first \
	-mmacosx-version-min=11.0 \
	-arch \
	arm64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-search_paths_first

LIBS := \
	/Users/andreypetrov/Downloads/libiec61850-node/lib/build/libiec61850-macos-latest-arm64.a

$(builddir)/addon_iec61850.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/addon_iec61850.node: LIBS := $(LIBS)
$(builddir)/addon_iec61850.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/addon_iec61850.node: TOOLSET := $(TOOLSET)
$(builddir)/addon_iec61850.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/addon_iec61850.node
# Add target alias
.PHONY: addon_iec61850
addon_iec61850: $(builddir)/addon_iec61850.node

# Short alias for building this executable.
.PHONY: addon_iec61850.node
addon_iec61850.node: $(builddir)/addon_iec61850.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/addon_iec61850.node

